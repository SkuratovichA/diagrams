@startuml_class
@package util
@class Spec
{
@attribute + int value
@attribute + int index
@method filter(quants) void
@method pattern() void
@method sort() void
@method get(quant) void
@method has(quant) void
@method token(quant) quant
@method version() void
@method method() void
@method type() void
@method id() void
@method source() void
@method add(spec,quant) void
@method toString() void
}
@class Spec.Map
{
@attribute + <map> mapa
@method + add(versionVector) void
@method + covers(version) void
@method + toString(trim) void
}
@class (quant)
{
@attribute + void quant
@attribute + void body
@attribute + void bare
@attribute + void ext
}
Spec -- (quant)
@packageend util
@package model #AFAFAF
@interface Syncable
{
@attribute - void _lstn[]
@attribute - void _id
@attribute - void _version
@attribute - void _host
@method + spec() void
@method + version() void
@method + deliver(spec,val,lstn) void
@method + diff(base) void
@method + apply(values) void
@method + validateOrder() void
@method + acl() void
@method + validate() void
@method + checkUplink() void
@method + close() void
@method + gc() void
@method + log() void
@method ~ init() void
@method ~ default() void
@method ~ err() void
@method - emit(spec,val,src) void
@method - on() void
@method - reon() void
@method - once() void
@method - off() void
@method - reoff() void
}
@class Model
{
@attribute - void _oplog
@method + diff() void
@method + packState(state) void
@method + unpackState(state) void
@method + distillLog() void
@method + pojo() void
@method + fill() void
@method + save() void
@method ~ init() void
@method # set() void
@method - on() void
@method - off() void
}
@class Set
{
@method + get(key) void
@method + add(key,spec) void
@method + remove(key) void
@method + fillAll() void
@method + collection() void
}
@class Host
{
@attribute + unknown objects{}
@attribute + unknown lastTs
@attribute + unknown tsSeq
@attribute + unknown clockOffset
@attribute + unknown peers{}
@method + connect(host) void
@method + checkUplink(spec) void
@method + version() void
@method + deliver() void
@method + availableUplinks(spec) void
@method + get(spec) void
@method + register(obj) void
@method + unregister(obj) void
@method - init() void
@method - on() void
@method - reon() void
@method - off() void
@method - reoff() void
}
Model --|> Syncable
Set --|> Model
Host --|> Syncable
@packageend model
@enduml_class
